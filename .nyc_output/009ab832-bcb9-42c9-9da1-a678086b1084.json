{"/home/nicola/repos/typescript-color-gradient/src/index.ts":{"path":"/home/nicola/repos/typescript-color-gradient/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":29}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":24}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":55}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":51}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":52}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":32}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"11":{"start":{"line":23,"column":8},"end":{"line":26,"column":107}},"12":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":38}},"14":{"start":{"line":32,"column":13},"end":{"line":34,"column":9}},"15":{"start":{"line":33,"column":12},"end":{"line":33,"column":38}},"16":{"start":{"line":35,"column":25},"end":{"line":35,"column":50}},"17":{"start":{"line":36,"column":26},"end":{"line":36,"column":45}},"18":{"start":{"line":37,"column":24},"end":{"line":37,"column":41}},"19":{"start":{"line":38,"column":24},"end":{"line":38,"column":56}},"20":{"start":{"line":39,"column":26},"end":{"line":39,"column":87}},"21":{"start":{"line":40,"column":8},"end":{"line":40,"column":86}},"22":{"start":{"line":45,"column":8},"end":{"line":45,"column":28}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":25}},"24":{"start":{"line":47,"column":8},"end":{"line":47,"column":25}},"25":{"start":{"line":48,"column":8},"end":{"line":48,"column":28}},"26":{"start":{"line":49,"column":8},"end":{"line":49,"column":41}},"27":{"start":{"line":57,"column":8},"end":{"line":57,"column":40}},"28":{"start":{"line":58,"column":8},"end":{"line":58,"column":20}},"29":{"start":{"line":65,"column":30},"end":{"line":65,"column":32}},"30":{"start":{"line":66,"column":8},"end":{"line":75,"column":9}},"31":{"start":{"line":66,"column":21},"end":{"line":66,"column":22}},"32":{"start":{"line":67,"column":29},"end":{"line":67,"column":46}},"33":{"start":{"line":68,"column":26},"end":{"line":68,"column":78}},"34":{"start":{"line":69,"column":24},"end":{"line":71,"column":43}},"35":{"start":{"line":72,"column":12},"end":{"line":74,"column":13}},"36":{"start":{"line":72,"column":25},"end":{"line":72,"column":30}},"37":{"start":{"line":73,"column":16},"end":{"line":73,"column":66}},"38":{"start":{"line":76,"column":8},"end":{"line":76,"column":39}},"39":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"40":{"start":{"line":85,"column":12},"end":{"line":85,"column":60}},"41":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"42":{"start":{"line":88,"column":12},"end":{"line":88,"column":76}},"43":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"44":{"start":{"line":91,"column":12},"end":{"line":91,"column":79}},"45":{"start":{"line":93,"column":25},"end":{"line":93,"column":40}},"46":{"start":{"line":94,"column":24},"end":{"line":94,"column":61}},"47":{"start":{"line":95,"column":22},"end":{"line":95,"column":104}},"48":{"start":{"line":96,"column":8},"end":{"line":96,"column":56}},"49":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"50":{"start":{"line":105,"column":12},"end":{"line":105,"column":64}},"51":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"52":{"start":{"line":108,"column":12},"end":{"line":108,"column":79}},"53":{"start":{"line":110,"column":8},"end":{"line":110,"column":32}},"54":{"start":{"line":111,"column":8},"end":{"line":111,"column":36}},"55":{"start":{"line":112,"column":8},"end":{"line":112,"column":20}},"56":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"57":{"start":{"line":116,"column":12},"end":{"line":116,"column":52}},"58":{"start":{"line":118,"column":8},"end":{"line":121,"column":9}},"59":{"start":{"line":119,"column":30},"end":{"line":119,"column":36}},"60":{"start":{"line":120,"column":12},"end":{"line":120,"column":61}},"61":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"62":{"start":{"line":122,"column":35},"end":{"line":122,"column":56}},"63":{"start":{"line":123,"column":12},"end":{"line":123,"column":75}},"64":{"start":{"line":125,"column":26},"end":{"line":125,"column":61}},"65":{"start":{"line":126,"column":30},"end":{"line":126,"column":49}},"66":{"start":{"line":127,"column":22},"end":{"line":127,"column":23}},"67":{"start":{"line":128,"column":22},"end":{"line":128,"column":31}},"68":{"start":{"line":129,"column":8},"end":{"line":129,"column":56}},"69":{"start":{"line":130,"column":8},"end":{"line":130,"column":48}},"70":{"start":{"line":131,"column":8},"end":{"line":131,"column":41}},"71":{"start":{"line":132,"column":8},"end":{"line":135,"column":15}},"72":{"start":{"line":136,"column":8},"end":{"line":147,"column":9}},"73":{"start":{"line":136,"column":21},"end":{"line":136,"column":22}},"74":{"start":{"line":137,"column":34},"end":{"line":137,"column":53}},"75":{"start":{"line":138,"column":26},"end":{"line":138,"column":39}},"76":{"start":{"line":139,"column":26},"end":{"line":139,"column":45}},"77":{"start":{"line":140,"column":12},"end":{"line":140,"column":64}},"78":{"start":{"line":141,"column":12},"end":{"line":141,"column":52}},"79":{"start":{"line":142,"column":12},"end":{"line":142,"column":46}},"80":{"start":{"line":143,"column":12},"end":{"line":146,"column":14}},"81":{"start":{"line":148,"column":8},"end":{"line":148,"column":29}},"82":{"start":{"line":152,"column":23},"end":{"line":156,"column":224}},"83":{"start":{"line":156,"column":94},"end":{"line":156,"column":212}},"84":{"start":{"line":157,"column":8},"end":{"line":157,"column":28}},"85":{"start":{"line":160,"column":8},"end":{"line":160,"column":88}},"86":{"start":{"line":163,"column":22},"end":{"line":163,"column":38}},"87":{"start":{"line":164,"column":8},"end":{"line":167,"column":34}},"88":{"start":{"line":170,"column":0},"end":{"line":170,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":10,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":38},"end":{"line":14,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":23},"end":{"line":17,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":38},"end":{"line":21,"column":5}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":26},"end":{"line":27,"column":5}},"line":22},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":41},"end":{"line":41,"column":5}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":18},"end":{"line":50,"column":5}},"line":44},"7":{"name":"(anonymous_7)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":30},"end":{"line":59,"column":5}},"line":56},"8":{"name":"(anonymous_8)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":16},"end":{"line":77,"column":5}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":26},"end":{"line":97,"column":5}},"line":83},"10":{"name":"(anonymous_10)","decl":{"start":{"line":103,"column":4},"end":{"line":103,"column":5}},"loc":{"start":{"line":103,"column":33},"end":{"line":113,"column":5}},"line":103},"11":{"name":"(anonymous_11)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":22},"end":{"line":149,"column":5}},"line":114},"12":{"name":"(anonymous_12)","decl":{"start":{"line":122,"column":24},"end":{"line":122,"column":25}},"loc":{"start":{"line":122,"column":35},"end":{"line":122,"column":56}},"line":122},"13":{"name":"(anonymous_13)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":41},"end":{"line":158,"column":5}},"line":150},"14":{"name":"(anonymous_14)","decl":{"start":{"line":156,"column":75},"end":{"line":156,"column":76}},"loc":{"start":{"line":156,"column":84},"end":{"line":156,"column":214}},"line":156},"15":{"name":"(anonymous_15)","decl":{"start":{"line":159,"column":4},"end":{"line":159,"column":5}},"loc":{"start":{"line":159,"column":26},"end":{"line":161,"column":5}},"line":159},"16":{"name":"(anonymous_16)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":21},"end":{"line":168,"column":5}},"line":162}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},{"start":{"line":29,"column":8},"end":{"line":34,"column":9}}],"line":29},"1":{"loc":{"start":{"line":32,"column":13},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":13},"end":{"line":34,"column":9}},{"start":{"line":32,"column":13},"end":{"line":34,"column":9}}],"line":32},"2":{"loc":{"start":{"line":40,"column":15},"end":{"line":40,"column":85}},"type":"cond-expr","locations":[{"start":{"line":40,"column":32},"end":{"line":40,"column":60}},{"start":{"line":40,"column":63},"end":{"line":40,"column":85}}],"line":40},"3":{"loc":{"start":{"line":57,"column":23},"end":{"line":57,"column":38}},"type":"binary-expr","locations":[{"start":{"line":57,"column":23},"end":{"line":57,"column":32}},{"start":{"line":57,"column":36},"end":{"line":57,"column":38}}],"line":57},"4":{"loc":{"start":{"line":68,"column":26},"end":{"line":68,"column":78}},"type":"cond-expr","locations":[{"start":{"line":68,"column":49},"end":{"line":68,"column":50}},{"start":{"line":68,"column":53},"end":{"line":68,"column":78}}],"line":68},"5":{"loc":{"start":{"line":69,"column":24},"end":{"line":71,"column":43}},"type":"cond-expr","locations":[{"start":{"line":70,"column":18},"end":{"line":70,"column":36}},{"start":{"line":71,"column":18},"end":{"line":71,"column":43}}],"line":69},"6":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{"line":84,"column":8},"end":{"line":86,"column":9}}],"line":84},"7":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87},"8":{"loc":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},{"start":{"line":90,"column":8},"end":{"line":92,"column":9}}],"line":90},"9":{"loc":{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":106,"column":9}},{"start":{"line":104,"column":8},"end":{"line":106,"column":9}}],"line":104},"10":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107},"11":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{"line":115,"column":8},"end":{"line":117,"column":9}}],"line":115},"12":{"loc":{"start":{"line":118,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":121,"column":9}},{"start":{"line":118,"column":8},"end":{"line":121,"column":9}}],"line":118},"13":{"loc":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},{"start":{"line":122,"column":8},"end":{"line":124,"column":9}}],"line":122},"14":{"loc":{"start":{"line":152,"column":23},"end":{"line":156,"column":224}},"type":"cond-expr","locations":[{"start":{"line":156,"column":59},"end":{"line":156,"column":65}},{"start":{"line":156,"column":68},"end":{"line":156,"column":224}}],"line":152},"15":{"loc":{"start":{"line":152,"column":23},"end":{"line":156,"column":56}},"type":"binary-expr","locations":[{"start":{"line":152,"column":23},"end":{"line":156,"column":39}},{"start":{"line":156,"column":43},"end":{"line":156,"column":56}}],"line":152},"16":{"loc":{"start":{"line":156,"column":101},"end":{"line":156,"column":211}},"type":"cond-expr","locations":[{"start":{"line":156,"column":183},"end":{"line":156,"column":189}},{"start":{"line":156,"column":192},"end":{"line":156,"column":211}}],"line":156},"17":{"loc":{"start":{"line":156,"column":101},"end":{"line":156,"column":180}},"type":"binary-expr","locations":[{"start":{"line":156,"column":101},"end":{"line":156,"column":163}},{"start":{"line":156,"column":167},"end":{"line":156,"column":180}}],"line":156},"18":{"loc":{"start":{"line":164,"column":15},"end":{"line":167,"column":33}},"type":"binary-expr","locations":[{"start":{"line":164,"column":15},"end":{"line":164,"column":79}},{"start":{"line":165,"column":15},"end":{"line":165,"column":79}},{"start":{"line":166,"column":15},"end":{"line":166,"column":72}},{"start":{"line":167,"column":15},"end":{"line":167,"column":33}}],"line":164},"19":{"loc":{"start":{"line":164,"column":16},"end":{"line":164,"column":74}},"type":"cond-expr","locations":[{"start":{"line":164,"column":53},"end":{"line":164,"column":59}},{"start":{"line":164,"column":62},"end":{"line":164,"column":74}}],"line":164},"20":{"loc":{"start":{"line":164,"column":16},"end":{"line":164,"column":50}},"type":"binary-expr","locations":[{"start":{"line":164,"column":16},"end":{"line":164,"column":30}},{"start":{"line":164,"column":34},"end":{"line":164,"column":50}}],"line":164},"21":{"loc":{"start":{"line":165,"column":16},"end":{"line":165,"column":74}},"type":"cond-expr","locations":[{"start":{"line":165,"column":53},"end":{"line":165,"column":59}},{"start":{"line":165,"column":62},"end":{"line":165,"column":74}}],"line":165},"22":{"loc":{"start":{"line":165,"column":16},"end":{"line":165,"column":50}},"type":"binary-expr","locations":[{"start":{"line":165,"column":16},"end":{"line":165,"column":30}},{"start":{"line":165,"column":34},"end":{"line":165,"column":50}}],"line":165}},"s":{"0":1,"1":1,"2":25,"3":25,"4":25,"5":25,"6":25,"7":25,"8":50,"9":25,"10":25,"11":101,"12":303,"13":0,"14":303,"15":0,"16":303,"17":303,"18":303,"19":303,"20":303,"21":303,"22":19,"23":19,"24":19,"25":19,"26":19,"27":27,"28":23,"29":8,"30":8,"31":8,"32":8,"33":8,"34":8,"35":8,"36":8,"37":100,"38":8,"39":5,"40":2,"41":3,"42":1,"43":2,"44":1,"45":1,"46":1,"47":1,"48":1,"49":4,"50":1,"51":3,"52":1,"53":2,"54":2,"55":2,"56":29,"57":19,"58":29,"59":25,"60":25,"61":29,"62":54,"63":4,"64":25,"65":25,"66":25,"67":25,"68":25,"69":25,"70":25,"71":25,"72":25,"73":25,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":25,"82":25,"83":75,"84":25,"85":19,"86":54,"87":54,"88":1},"f":{"0":25,"1":25,"2":50,"3":25,"4":101,"5":303,"6":19,"7":27,"8":8,"9":5,"10":4,"11":29,"12":54,"13":25,"14":75,"15":19,"16":54},"b":{"0":[0,303],"1":[0,303],"2":[22,281],"3":[27,0],"4":[8,0],"5":[8,0],"6":[2,3],"7":[1,2],"8":[1,1],"9":[1,3],"10":[1,2],"11":[19,10],"12":[25,4],"13":[4,25],"14":[0,25],"15":[25,25],"16":[0,75],"17":[75,75],"18":[54,52,52,51],"19":[0,54],"20":[54,54],"21":[0,52],"22":[52,52]},"inputSourceMap":{"version":3,"file":"/home/nicola/repos/typescript-color-gradient/src/index.ts","sources":["/home/nicola/repos/typescript-color-gradient/src/index.ts"],"names":[],"mappings":"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","sourcesContent":["interface Limits {\n  upper: number,\n  lower: number\n}\n\nclass GradientColor {\n\n  private startColor: string;\n  private endColor: string;\n  private minNum: number;\n  private maxNum: number;\n\n  constructor() {\n    this.startColor = '';\n    this.endColor = '';\n    this.minNum = 0;\n    this.maxNum = 10;\n  }\n\n  setGradient(colorStart: string, colorEnd: string) {\n    this.startColor = this.getHexColor(colorStart);\n    this.endColor = this.getHexColor(colorEnd);\n  }\n\n  getHexColor(color: string) {\n    return color.split('#').splice(-1).join('');\n  }\n\n  setMidpoint(minNumber: number, maxNumber: number) {\n    this.minNum = minNumber;\n    this.maxNum = maxNumber;\n  }\n\n  getColor(numberValue: number): string {\n    return (\n      '#' +\n      this.generateHex(\n        numberValue,\n        this.startColor.substring(0, 2),\n        this.endColor.substring(0, 2)\n      ) +\n      this.generateHex(\n        numberValue,\n        this.startColor.substring(2, 4),\n        this.endColor.substring(2, 4)\n      ) +\n      this.generateHex(\n        numberValue,\n        this.startColor.substring(4, 6),\n        this.endColor.substring(4, 6)\n      )\n    );\n  }\n\n  generateHex(numberValue: number, start: string, end: string) {\n    if (numberValue < this.minNum) {\n      numberValue = this.minNum;\n    } else if (numberValue > this.maxNum) {\n      numberValue = this.maxNum;\n    }\n\n    const midPoint = this.maxNum - this.minNum;\n    const startBase = parseInt(start, 16);\n    const endBase = parseInt(end, 16);\n    const average = (endBase - startBase) / midPoint;\n    const finalBase = Math.round(average * (numberValue - this.minNum) + startBase);\n    return finalBase < 16 ? '0' + finalBase.toString(16) : finalBase.toString(16);\n  }\n}\n\nclass Gradient {\n\n  private gradients: GradientColor[];\n  private maxNum: number;\n  private colors: string[];\n  private intervals: Limits[];\n\n  constructor() {\n    this.gradients = [];\n    this.maxNum = 10;\n    this.colors = [];\n    this.intervals = [];\n    this.setGradient(...this.colors);\n  }\n  /**\n   * sets all the colors to generate a gradient.\n   * @param {string[]} gradients the hex colors from which the gradient is generated.\n   * @returns {Gradient} for method chaining.\n   */\n  setGradient(...gradients: string[]): Gradient {\n    this.setColors(gradients || []);\n    return this;\n  }\n\n  /**\n   * sets all the colors to generate a gradient.\n   * @returns {string[]} the array of generated hex colors.\n   */\n  getColors(): string[] {\n    const gradientArray: string[] = [];\n\n    for (let j = 0; j < this.intervals.length; j++) {\n      const interval = this.intervals[j];\n      const start = interval.lower === 0 ? 1 : Math.ceil(interval.lower);\n      const end =\n        interval.upper === this.maxNum\n          ? interval.upper + 1\n          : Math.ceil(interval.upper);\n      for (let i = start; i < end; i++) {\n        gradientArray.push(this.gradients[j].getColor(i));\n      }\n    }\n\n    return gradientArray.reverse();\n  }\n\n  /**\n   * sets all the colors to generate a gradient.\n   * @param {number} numberValue the index of the color array.\n   * @returns {string} the desired color from the gradient array.\n   */\n  getColor(numberValue: number): string {\n    if (isNaN(numberValue)) {\n      throw new TypeError('value should be a number');\n    }\n    if (numberValue < 0) {\n      throw new RangeError('value should be greater or equal than 0');\n    }\n    if (numberValue > this.colors.length) {\n      throw new RangeError(`value should be lesser than ${this.maxNum}`);\n    }\n    const toInsert = numberValue + 1;\n    const segment = (this.maxNum) / this.gradients.length;\n    const index = Math.min(\n      Math.floor((Math.max(toInsert, 0)) / segment),\n      this.gradients.length - 1\n    );\n    return this.gradients[index].getColor(toInsert);\n  }\n\n  /**\n   * sets all the colors to generate a gradient.\n   * @param {number} maxNumber The number of colors generated from the gradient. Default is 10\n   * @returns {Gradient} for method chaining.\n   */\n  setNumberOfColors(maxNumber: number): Gradient {\n    if (isNaN(maxNumber)) {\n      throw new RangeError('midPoint should be a number');\n    }\n    if (maxNumber < 0) {\n      throw new RangeError('midPoint should be greater or equal than 0');\n    }\n    this.maxNum = maxNumber;\n    this.setColors(this.colors);\n    return this;\n  }\n\n  private setColors(colors: string[]): void {\n\n    if (!colors.length) {\n      colors.push(this.generateRandomColor());\n    }\n\n    if (colors.length === 1) {\n      const [onlyOne] = colors;\n      colors.push(this.generateComplementary(onlyOne));\n    }\n\n    if (colors.some((color) => this.isInvalid(color))) {\n      throw new Error('All colors must be defined and/or not empty');\n    }\n\n    const increment = (this.maxNum) / (colors.length - 1);\n    const firstGradient = new GradientColor();\n    const lower = 0;\n    const upper = increment;\n\n    firstGradient.setGradient(colors[0], colors[1]);\n    firstGradient.setMidpoint(lower, upper);\n\n    this.gradients = [firstGradient];\n    this.intervals = [{\n      lower,\n      upper\n    }];\n\n    for (let i = 1; i < colors.length - 1; i++) {\n      const gradientColor = new GradientColor();\n      const lower = increment * i;\n      const upper = increment * (i + 1);\n      gradientColor.setGradient(colors[i], colors[i + 1]);\n      gradientColor.setMidpoint(lower, upper);\n      this.gradients[i] = gradientColor;\n      this.intervals[i] = {\n        lower,\n        upper\n      };\n    }\n\n    this.colors = colors;\n  }\n\n  private generateComplementary(startingColor: string): string {\n    const result = startingColor\n      .split('#')\n      .splice(-1)\n      .join('')\n      .match(/.{1,2}/g)\n      ?.map((hex: string) => Math.abs(parseInt(hex, 16) - 255).toString(16)?.padStart(2, '0'))\n      .join('');\n\n    return `#${result}`;\n  }\n\n  private generateRandomColor(): string {\n    return `#${Math.floor(Math.random() * 16777215).toString(16).padStart(6, '0')}`;\n  }\n\n  private isInvalid(color: string): boolean {\n    const regex = /[0-9A-Fa-f]{6}/;\n    return color?.length < 6 \n    || color?.length > 7\n    || isNaN(parseInt(color.split('#').splice(-1).join(''), 16))\n    || !regex.test(color);\n  }\n}\n\nexport {\n  Gradient\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f36a12ea3ec42515f718b650181a7305668ae31b","contentHash":"9b20c91afb72998111425d125e8118911491c8817703297847fab7e26772fb8f"}}